@model IEnumerable<Studievereniging.Models.Product>

@{
    ViewData["Title"] = "Products";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Products</h1>
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-lg"></i> Create Product
        </a>
    </div>

    <!-- Search and Filter -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" id="searchInput" class="form-control" placeholder="Search products...">
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text">€</span>
                        <input type="number" id="maxPrice" class="form-control" placeholder="Max price">
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Products Grid -->
    <div class="row row-cols-1 row-cols-md-3 g-4" id="productsGrid">
        @foreach (var item in Model)
        {
            <div class="col product-card" data-name="@item.Name.ToLower()" data-price="@item.Price">
                <div class="card h-100 shadow-sm">
                    @if (!string.IsNullOrEmpty(item.Image))
                    {
                        <img src="@item.Image" class="card-img-top" alt="@item.Name" style="height: 200px; object-fit: cover;">
                    }
                    else
                    {
                        <div class="card-img-top bg-light d-flex align-items-center justify-content-center"
                            style="height: 200px;">
                            <i class="bi bi-image text-muted" style="font-size: 3rem;"></i>
                        </div>
                    }
                    <div class="card-body">
                        <h5 class="card-title">@item.Name</h5>
                        <p class="card-text text-primary fw-bold">€@item.Price.ToString("F2")</p>
                    </div>
                    <div class="card-footer bg-transparent border-top-0">
                        <div class="btn-group w-100">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-secondary btn-sm">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm">
                                <i class="bi bi-info-circle"></i>
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-sm">
                                <i class="bi bi-trash"></i>
                            </a>
                            <form asp-controller="Cart" asp-action="AddToCart" method="post">
                                <input type="hidden" name="productId" value="@item.Id">
                                <button type="submit" class="btn btn-primary btn-sm w-100">
                                    <i class="bi bi-cart-plus"></i> Add to Cart
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('searchInput');
            const maxPrice = document.getElementById('maxPrice');
            const products = document.querySelectorAll('.product-card');

            function filterProducts() {
                const searchTerm = searchInput.value.toLowerCase();
                const maxPriceValue = parseFloat(maxPrice.value) || Infinity;

                products.forEach(product => {
                    const name = product.dataset.name;
                    const price = parseFloat(product.dataset.price);
                    const matchesSearch = name.includes(searchTerm);
                    const matchesPrice = price <= maxPriceValue;

                    product.style.display = matchesSearch && matchesPrice ? '' : 'none';
                });
            }

            searchInput.addEventListener('input', filterProducts);
            maxPrice.addEventListener('input', filterProducts);
        });
    </script>
}
